@using asp_dot_net_mvc_demo.Controllers
@model LinqVM
@{
	var employeeList = Model.EmployeeList;
}

<h1>Linq</h1>

<div class="row">
	<div class="col-6">
		<h2>Where</h2>
		<ul>
			<li>Same with Filter in JS. Iterate all items with condition</li>
			<li>True stay, False drop</li>
		</ul>
		@foreach (var employee in employeeList.Where(emp => emp.Job == "Job4"))
		{
			<p>@employee.EmpName</p>
		}
	</div>

	<div class="col-6">
		<h2>Order By</h2>
		@foreach (var employee in employeeList.OrderByDescending(emp => emp.Salary).ThenBy(emp => emp.Job))
		{
			<p>@employee.EmpName - @employee.Salary</p>
		}
	</div>
</div>
<div class="row">
	<div class="col-6">
		<h2></h2>
	</div>
	<div class="col-6">
		<h2></h2>
	</div>
</div>
<div class="row">
	<div class="col-6">
		<h2>First</h2>
		<ul>
			<li>Condition match with multiple items</li>
			<li>Get the first Item</li>
			<li>Error if not found</li>
		</ul>
		<p>@employeeList.First(emp => emp.Job == "Job4").EmpName</p>
		
		<h2>FirstOrDefault</h2>
		<ul>
			<li>No Error If Not Found</li>
		</ul>
		<p>@employeeList.FirstOrDefault(emp => emp.Job == "Job4").EmpName</p>
	</div>
	<div class="col-6">
		<h2>ElementAt / ElementAtOrDefault</h2>
		<ul>
			<li>Access by Index</li>
		</ul>
		<p>@employeeList.ElementAt(0).EmpName</p>
		<p>@employeeList.ElementAt(1).EmpName</p>
		<p>@employeeList.ElementAt(2).EmpName</p>
		<p>@(employeeList.ElementAtOrDefault(99)?.EmpName ?? "Not Found")</p>

		<h2>Single / SingleOrDefault</h2>
		<ul>
			<li>Error if multiple result</li>
		</ul>
		@*This throws error because of mathing more than one*@
		@*<p>@(employeeList.SingleOrDefault(emp => emp.Job == "Job4")?.EmpName ?? "Not Found")</p>*@
		<p>@(employeeList.SingleOrDefault(emp => emp.Job == "Job3")?.EmpName ?? "Not Found")</p>
	</div>
</div>
<div class="row">
	<div class="col-6">
		<h2>Select</h2>
		<ul>
			<li>Iterate all Item and Generate new Item</li>
		</ul>
		@foreach (var employeeName in employeeList.Select(emp => emp.EmpName + " Generated By Select"))
		{
			<p>@employeeName</p>
		}
	</div>
	<div class="col-6">
		<h3>Min</h3>
		<p>@employeeList.Min(emp => emp.Salary)</p>

		<h3>Max</h3>
		<p>@employeeList.Max(emp => emp.Salary)</p>

		<h3>Sum</h3>
		<p>@employeeList.Sum(emp => emp.Salary)</p>
		
		<h3>Average</h3>
		<p>@employeeList.Average(emp => emp.Salary)</p>
		
		<h3>Count</h3>
		<p>@employeeList.Count()</p>
	</div>
</div>



